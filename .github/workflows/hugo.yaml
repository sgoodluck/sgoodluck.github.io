# Workflow to build and deploy a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  push:
    branches: [main]  # Triggers on pushes to main branch
  workflow_dispatch:  # Allows manual trigger from GitHub Actions UI

# Security permissions
permissions:
  contents: read      # Read repository contents
  pages: write       # Write to GitHub Pages
  id-token: write    # Write identity token for authentication

# Deployment concurrency settings
concurrency:
  group: "pages"
  cancel-in-progress: false  # Don't cancel existing deployments

defaults:
  run:
    shell: bash      # Use bash shell for all run steps

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.141.0  # Specify Hugo version explicitly
      TZ: America/Los_Angeles  # Set timezone for builds
    steps:
      # Install Hugo extended version (supports SCSS/SASS)
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # Install Dart Sass for SCSS/SASS processing
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      # Checkout repository with full history and submodules (themes)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Get theme submodules
          fetch-depth: 0         # Full history for .GitInfo

      # Configure GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Install Node dependencies if package.json exists
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      # Build Hugo site
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache  # Cache directory for faster builds
          HUGO_ENVIRONMENT: production                   # Set environment to production
        run: |
          hugo \
            --gc \             # Run garbage collection on resources
            --minify \         # Minify output files
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      # Upload built site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public       # Directory containing built site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL of deployed site
    runs-on: ubuntu-latest
    needs: build              # Wait for build job to complete
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
